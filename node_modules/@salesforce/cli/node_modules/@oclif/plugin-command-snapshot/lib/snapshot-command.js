import { Command } from '@oclif/core';
import sortBy from 'lodash.sortby';
import { writeFileSync } from 'node:fs';
export default class SnapshotCommand extends Command {
    get commands() {
        const devPlugins = this.config.pjson.oclif.devPlugins ?? [];
        const commands = this.config.commands
            // Ignore dev plugins
            .filter((command) => !devPlugins.includes(command.pluginName ?? ''))
            // remove aliases that reference themselves
            .filter((command) => !command.aliases.includes(command.id));
        return sortBy(commands, 'id');
    }
    get entries() {
        return this.commands.map((command) => ({
            alias: command.aliases,
            command: command.id,
            flagAliases: Object.values(command.flags)
                .flatMap((flag) => flag.aliases)
                .filter(Boolean)
                .sort(),
            flagChars: Object.values(command.flags)
                .map((flag) => flag.char)
                .filter(Boolean)
                .sort(),
            flags: Object.keys(command.flags).sort(),
            plugin: command.pluginName,
        }));
    }
    write(path, data) {
        writeFileSync(path, data);
    }
}
