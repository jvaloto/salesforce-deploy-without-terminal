import { Connection } from '@salesforce/core';
import { Nullable } from '@salesforce/ts-types';
import type { QueryResult } from '@jsforce/jsforce-node';
import { Duration } from '@salesforce/kit';
import { PackageInstallCreateRequest, PackageInstallOptions, PackageType, PackagingSObjects } from '../interfaces';
import PackageInstallRequest = PackagingSObjects.PackageInstallRequest;
export declare function createPackageInstallRequest(connection: Connection, pkgInstallCreateRequest: PackageInstallCreateRequest, packageType: PackageType): Promise<PackagingSObjects.PackageInstallRequest>;
export declare function getStatus(connection: Connection, packageInstallRequestId: string): Promise<PackageInstallRequest>;
export declare function isErrorFromSPVQueryRestriction(err: Error): boolean;
export declare function isErrorPackageNotAvailable(err: Error): boolean;
export declare function getInstallationStatus(subscriberPackageVersionId: string, installationKey: Nullable<string>, connection: Connection): Promise<QueryResult<PackagingSObjects.SubscriberPackageVersion> | undefined>;
export declare function waitForPublish(connection: Connection, subscriberPackageVersionId: string, frequency?: number | Duration, timeout?: number | Duration, installationKey?: string | Nullable<string>): Promise<void>;
export declare function pollStatus(connection: Connection, installRequestId: string, options?: PackageInstallOptions): Promise<PackageInstallRequest>;
