import { SfCommand } from '@salesforce/sf-plugins-core';
import type { BotTemplate, GenAiPlanner, BotDialogGroup, ConversationDefinitionGoal, ConversationVariable } from '@salesforce/types/metadata';
export type GenAiPlannerBundleExt = {
    GenAiPlannerBundle: GenAiPlanner & {
        botTemplate?: string;
    };
};
export type BotTemplateExt = {
    '?xml': {
        '@_version': '1.0';
        '@_encoding': 'UTF-8';
    };
    BotTemplate: Omit<BotTemplate, 'botDialogGroups' | 'conversationGoals' | 'conversationVariables'> & {
        agentType?: string;
        botDialogGroups?: BotDialogGroup[];
        conversationGoals?: ConversationDefinitionGoal[];
        conversationVariables?: ConversationVariable[];
    };
};
export type AgentGenerateTemplateResult = {
    genAiPlannerBundlePath: string;
    botTemplatePath: string;
};
export default class AgentGenerateTemplate extends SfCommand<AgentGenerateTemplateResult> {
    static readonly summary: string;
    static readonly description: string;
    static readonly examples: string[];
    static readonly requiresProject = true;
    static readonly flags: {
        'api-version': import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        'agent-version': import("@oclif/core/interfaces").OptionFlag<number, import("@oclif/core/interfaces").CustomOptions>;
        'agent-file': import("@oclif/core/interfaces").OptionFlag<string, import("@oclif/core/interfaces").CustomOptions>;
    };
    run(): Promise<AgentGenerateTemplateResult>;
}
