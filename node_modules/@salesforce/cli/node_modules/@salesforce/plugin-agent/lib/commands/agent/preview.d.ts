import { SfCommand } from '@salesforce/sf-plugins-core';
type BotVersionStatus = {
    Status: 'Active' | 'Inactive';
};
export type AgentData = {
    Id: string;
    DeveloperName: string;
    BotVersions: {
        records: BotVersionStatus[];
    };
};
type Choice<Value> = {
    value: Value;
    name?: string;
    disabled?: boolean | string;
};
type AgentValue = {
    Id: string;
    DeveloperName: string;
};
export declare const UNSUPPORTED_AGENTS: string[];
export type AgentPreviewResult = void;
export default class AgentPreview extends SfCommand<AgentPreviewResult> {
    static readonly summary: string;
    static readonly description: string;
    static readonly examples: string[];
    static readonly enableJsonFlag = false;
    static readonly requiresProject = true;
    static state: string;
    static readonly flags: {
        'target-org': import("@oclif/core/interfaces").OptionFlag<import("@salesforce/core").Org, import("@oclif/core/interfaces").CustomOptions>;
        'api-version': import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        'client-app': import("@oclif/core/interfaces").OptionFlag<string, import("@oclif/core/interfaces").CustomOptions>;
        'api-name': import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        'output-dir': import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        'apex-debug': import("@oclif/core/interfaces").BooleanFlag<boolean>;
    };
    run(): Promise<AgentPreviewResult>;
}
export declare const agentIsUnsupported: (devName: string) => boolean;
export declare const agentIsInactive: (agent: AgentData) => boolean;
export declare const validateAgent: (agent: AgentData) => boolean;
export declare const getAgentChoices: (agents: AgentData[]) => Array<Choice<AgentValue>>;
export declare const resolveOutputDir: (outputDir: string | undefined, apexDebug: boolean | undefined) => Promise<string | undefined>;
export {};
