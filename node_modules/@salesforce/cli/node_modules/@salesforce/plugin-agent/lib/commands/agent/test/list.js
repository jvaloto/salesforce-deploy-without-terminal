/*
 * Copyright (c) 2024, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
import { AgentTest } from '@salesforce/agents';
import { SfCommand, Flags } from '@salesforce/sf-plugins-core';
import { Messages } from '@salesforce/core';
Messages.importMessagesDirectoryFromMetaUrl(import.meta.url);
const messages = Messages.loadMessages('@salesforce/plugin-agent', 'agent.test.list');
export default class AgentTestList extends SfCommand {
    static summary = messages.getMessage('summary');
    static description = messages.getMessage('description');
    static examples = messages.getMessages('examples');
    static flags = {
        'target-org': Flags.requiredOrg(),
        'api-version': Flags.orgApiVersion(),
    };
    async run() {
        const { flags } = await this.parse(AgentTestList);
        const results = await AgentTest.list(flags['target-org'].getConnection(flags['api-version']));
        this.table({
            data: results,
            columns: [
                { key: 'fullName', name: 'API Name' },
                { key: 'id', name: 'Id' },
                { key: 'createdDate', name: 'Created Date' },
            ],
            sort: { fullName: 'asc' },
        });
        return results;
    }
}
//# sourceMappingURL=list.js.map