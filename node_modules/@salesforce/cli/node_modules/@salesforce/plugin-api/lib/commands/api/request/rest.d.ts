import type { Headers } from 'got';
import { SfCommand } from '@salesforce/sf-plugins-core';
import { Org } from '@salesforce/core';
import FormData from 'form-data';
declare const methodOptions: readonly ["GET", "POST", "PUT", "PATCH", "HEAD", "DELETE", "OPTIONS", "TRACE"];
type FileFormData = {
    type: 'file';
    src: string | string[];
    key: string;
};
type StringFormData = {
    type: 'text';
    value: string;
    key: string;
};
type FormDataPostmanSchema = {
    mode: 'formdata';
    formdata: Array<FileFormData | StringFormData>;
};
type RawPostmanSchema = {
    mode: 'raw';
    raw: string | Record<string, unknown>;
};
export type PostmanSchema = {
    url: {
        raw: string;
    } | string;
    method: typeof methodOptions;
    description?: string;
    header: string | Array<{
        key: string;
        value: string;
        disabled?: boolean;
        description?: string;
    }>;
    body: RawPostmanSchema | FormDataPostmanSchema;
};
export declare class Rest extends SfCommand<void> {
    static readonly summary: string;
    static readonly description: string;
    static readonly examples: string[];
    static state: string;
    static enableJsonFlag: boolean;
    static readonly flags: {
        'target-org': import("@oclif/core/interfaces").OptionFlag<Org, import("@oclif/core/interfaces").CustomOptions>;
        include: import("@oclif/core/interfaces").BooleanFlag<boolean>;
        method: import("@oclif/core/interfaces").OptionFlag<"GET" | "HEAD" | "POST" | "PUT" | "DELETE" | "OPTIONS" | "TRACE" | "PATCH" | undefined, import("@oclif/core/interfaces").CustomOptions>;
        header: import("@oclif/core/interfaces").OptionFlag<string[] | undefined, import("@oclif/core/interfaces").CustomOptions>;
        file: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        'stream-to-file': import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        body: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
    };
    static args: {
        url: import("@oclif/core/interfaces").Arg<string | undefined, Record<string, unknown>>;
    };
    run(): Promise<void>;
}
export declare const getBodyContents: (body?: PostmanSchema["body"]) => string | FormData;
export declare function getHeaders(keyValPair: string[] | PostmanSchema['header'] | undefined): Headers;
export {};
