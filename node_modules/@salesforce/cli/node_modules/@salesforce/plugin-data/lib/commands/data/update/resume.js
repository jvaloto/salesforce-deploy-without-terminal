/*
 * Copyright (c) 2024, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
import { SfCommand, Flags } from '@salesforce/sf-plugins-core';
import { Messages } from '@salesforce/core';
import { BulkUpdateRequestCache } from '../../../bulkDataRequestCache.js';
import { bulkIngestResume } from '../../../bulkIngest.js';
Messages.importMessagesDirectoryFromMetaUrl(import.meta.url);
const messages = Messages.loadMessages('@salesforce/plugin-data', 'data.update.resume');
export default class DataUpdateResume extends SfCommand {
    static summary = messages.getMessage('summary');
    static description = messages.getMessage('description');
    static examples = messages.getMessages('examples');
    static flags = {
        'use-most-recent': Flags.boolean({
            summary: messages.getMessage('flags.use-most-recent.summary'),
            exactlyOne: ['job-id'],
        }),
        'job-id': Flags.salesforceId({
            summary: messages.getMessage('flags.job-id.summary'),
            char: 'i',
            length: 18,
            startsWith: '750',
            exactlyOne: ['use-most-recent'],
        }),
        wait: Flags.duration({
            char: 'w',
            unit: 'minutes',
            summary: messages.getMessage('flags.wait.summary'),
            defaultValue: 5,
        }),
    };
    async run() {
        const { flags } = await this.parse(DataUpdateResume);
        return bulkIngestResume({
            cmdId: 'data update resume',
            stageTitle: 'Updating data',
            cache: await BulkUpdateRequestCache.create(),
            jobIdOrMostRecent: flags['job-id'] ?? flags['use-most-recent'],
            jsonEnabled: this.jsonEnabled(),
            wait: flags.wait,
            warnFn: (arg) => {
                this.warn(arg);
            },
        });
    }
}
//# sourceMappingURL=resume.js.map