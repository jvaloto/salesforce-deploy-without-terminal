import { SfProject, SfProjectJson } from '@salesforce/core';
import { ComponentSet } from '@salesforce/source-deploy-retrieve';
export type ComponentSetAndPackageDirPath = {
    packageDirPath: string;
    cs: ComponentSet;
};
export declare const PRESETS_PROP = "sourceBehaviorOptions";
export declare const PRESET_CHOICES: string[];
export declare const TMP_DIR: string;
export declare const DRY_RUN_DIR = "DRY-RUN-RESULTS";
/** returns packageDirectories and ComponentsSets where there is metadata of the type we'll change the behavior for */
export declare const getPackageDirectoriesForPreset: (project: SfProject, preset: string) => Promise<ComponentSetAndPackageDirPath[]>;
/** converts the composed metadata to mdapi format in a temp dir */
export declare const convertToMdapi: (packageDirsWithDecomposable: ComponentSetAndPackageDirPath[]) => Promise<string[]>;
/** get the LOCAL project json, throws if not present OR the preset already exists */
export declare const getValidatedProjectJson: (preset: string, project: SfProject) => SfProjectJson;
/** converts the temporary mdapi back to source, return a list of the created files */
export declare const convertBackToSource: ({ packageDirsWithPreset, projectDir, dryRun, }: {
    packageDirsWithPreset: ComponentSetAndPackageDirPath[];
    projectDir: string;
    /** if provided, will output the results into a separate directory outside the project's packageDirectories */
    dryRun: boolean;
}) => Promise<string[]>;
export declare const getTypesFromPreset: (preset: string) => Promise<string[]>;
