import { SfCommand } from '@salesforce/sf-plugins-core';
import { SfDoctorDiagnosis } from '../doctor.js';
export default class Doctor extends SfCommand<SfDoctorDiagnosis> {
    static readonly summary: string;
    static readonly description: string;
    static readonly examples: string[];
    static readonly flags: {
        command: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        plugin: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        'output-dir': import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
        'create-issue': import("@oclif/core/interfaces").BooleanFlag<boolean>;
        loglevel: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
    };
    private tasks;
    private doctor;
    private outputDir;
    private filesWrittenMsgs;
    run(): Promise<SfDoctorDiagnosis>;
    private runDoctorHook;
    /**
     * Only made into its own method for unit testing purposes
     *
     * @param url: url string to open
     */
    private openUrl;
    private generateIssueMarkdown;
    private parseCommand;
    private setupCommandExecution;
}
