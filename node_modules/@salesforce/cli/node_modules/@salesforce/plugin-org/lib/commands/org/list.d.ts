import { SfCommand } from '@salesforce/sf-plugins-core';
import { Interfaces } from '@oclif/core';
import { ExtendedAuthFields, FullyPopulatedScratchOrgFields } from '../../shared/orgTypes.js';
export declare const defaultOrgEmoji = "\uD83C\uDF41";
export declare const defaultHubEmoji = "\uD83C\uDF33";
export type OrgListResult = {
    /**
     * @deprecated
     * preserved for backward json compatibility.  Duplicates devHubs, sandboxes, regularOrgs, which should be preferred*/
    nonScratchOrgs: ExtendedAuthFields[];
    scratchOrgs: FullyPopulatedScratchOrgFields[];
    sandboxes: ExtendedAuthFields[];
    other: ExtendedAuthFields[];
    devHubs: ExtendedAuthFields[];
};
export declare class OrgListCommand extends SfCommand<OrgListResult> {
    static readonly summary: string;
    static readonly examples: string[];
    static readonly aliases: string[];
    static readonly deprecateAliases = true;
    static readonly flags: {
        verbose: Interfaces.BooleanFlag<boolean>;
        all: Interfaces.BooleanFlag<boolean>;
        clean: Interfaces.BooleanFlag<boolean>;
        'no-prompt': Interfaces.BooleanFlag<boolean>;
        'skip-connection-status': Interfaces.BooleanFlag<boolean>;
        loglevel: Interfaces.OptionFlag<string | undefined, Interfaces.CustomOptions>;
    };
    private flags;
    run(): Promise<OrgListResult>;
    protected cleanScratchOrgs(scratchOrgs: ExtendedAuthFields[], prompt?: boolean): Promise<void>;
    protected printOrgTable({ devHubs, scratchOrgs, other, sandboxes, skipconnectionstatus, }: {
        devHubs: ExtendedAuthFields[];
        other: ExtendedAuthFields[];
        sandboxes: ExtendedAuthFields[];
        scratchOrgs: FullyPopulatedScratchOrgFields[];
        skipconnectionstatus: boolean;
    }): void;
}
