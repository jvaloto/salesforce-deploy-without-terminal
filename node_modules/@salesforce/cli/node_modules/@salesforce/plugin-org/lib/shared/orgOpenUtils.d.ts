import { ChildProcess } from 'node:child_process';
import { Options } from 'open';
import { Connection, Org } from '@salesforce/core';
import { Env } from '@salesforce/kit';
export declare const openUrl: (url: string, options: Options) => Promise<ChildProcess>;
export declare const fileCleanup: (tempFilePath: string) => void;
/**
 * This method generates and returns a frontdoor url for the given org.
 *
 * @param org org for which we generate the frontdoor url.
 * @param conn the Connection for the given Org.
 * @param singleUseUrl if true returns a single-use url frontdoor url.
 */
export declare const buildFrontdoorUrl: (org: Org, conn: Connection, singleUseUrl: boolean) => Promise<string>;
export declare const handleDomainError: (err: unknown, url: string, env: Env) => string;
/** builds the html file that does an automatic post to the frontdoor url */
export declare const getFileContents: (authToken: string, instanceUrl: string, retUrl?: string) => string;
declare const _default: {
    openUrl: (url: string, options: Options) => Promise<ChildProcess>;
    fileCleanup: (tempFilePath: string) => void;
    buildFrontdoorUrl: (org: Org, conn: Connection, singleUseUrl: boolean) => Promise<string>;
    handleDomainError: (err: unknown, url: string, env: Env) => string;
    getFileContents: (authToken: string, instanceUrl: string, retUrl?: string) => string;
};
export default _default;
