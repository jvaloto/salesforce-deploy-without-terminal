import { SfCommand } from '@salesforce/sf-plugins-core';
import { Messages } from '@salesforce/core';
import type { CustomField } from '@salesforce/types/metadata';
export declare const messages: Messages<string>;
declare const supportedFieldTypesCustomObject: readonly ["AutoNumber", "Checkbox", "Currency", "DateTime", "Date", "Email", "Html", "Location", "LongTextArea", "Lookup", "MasterDetail", "Number", "Phone", "Picklist", "Text", "Time", "Url"];
type SaveableCustomField = Pick<CustomField, 'label' | 'description' | 'trackHistory' | 'inlineHelpText' | 'required' | 'fullName' | 'type' | 'scale' | 'precision' | 'visibleLines' | 'length' | 'unique' | 'externalId' | 'startingNumber' | 'defaultValue' | 'securityClassification' | 'displayLocationInDecimal'> & {
    type: (typeof supportedFieldTypesCustomObject)[number];
};
export type FieldGenerateResult = {
    field: SaveableCustomField;
    path: string;
};
export default class FieldGenerate extends SfCommand<FieldGenerateResult> {
    static readonly summary: string;
    static readonly description: string;
    static readonly examples: string[];
    static readonly requiresProject = true;
    static enableJsonFlag: boolean;
    static readonly aliases: string[];
    static readonly deprecateAliases = true;
    static readonly flags: {
        label: import("@oclif/core/interfaces").OptionFlag<string, import("@oclif/core/interfaces").CustomOptions>;
        object: import("@oclif/core/interfaces").OptionFlag<string | undefined, import("@oclif/core/interfaces").CustomOptions>;
    };
    run(): Promise<FieldGenerateResult>;
}
export {};
