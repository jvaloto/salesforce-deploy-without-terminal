import { SfError } from '@salesforce/core/sfError';
import { Errors } from '@oclif/core';
/**
 *
 * Takes an error and returns an exit code.
 * Logic:
 * - If it looks like a gack, use that code (20)
 * - If it looks like a TypeError, use that code (10)
 * - use the exitCode if it is a number
 * - use the code if it is a number, or 1 if it is present not a number
 * - use the process exitCode
 * - default to 1
 */
export declare const computeErrorCode: (e: Error | SfError | Errors.CLIError) => number;
/** identifies gacks via regex.  Searches the error message, stack, and recursively checks the cause chain */
export declare const errorIsGack: (error: Error | SfError) => boolean;
/** identifies TypeError.  Searches the error message, stack, and recursively checks the cause chain */
export declare const errorIsTypeError: (error: Error | SfError) => boolean;
//# sourceMappingURL=errorHandling.d.ts.map