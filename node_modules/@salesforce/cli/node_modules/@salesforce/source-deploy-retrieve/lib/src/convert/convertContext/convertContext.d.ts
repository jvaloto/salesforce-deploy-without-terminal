import { WriterFormat } from '../types';
import { RecompositionFinalizer } from './recompositionFinalizer';
import { NonDecompositionFinalizer } from './nonDecompositionFinalizer';
import { DecompositionFinalizer } from './decompositionFinalizer';
import { DecomposedLabelsFinalizer } from './decomposedLabelsFinalizer';
import { DecomposedPermissionSetFinalizer } from './decomposedPermissionSetFinalizer';
import { DecomposedExternalServiceRegistrationFinalizer } from './decomposedExternalServiceRegistrationFinalizer';
/**
 * A state manager over the course of a single metadata conversion call.
 */
export declare class ConvertContext {
    readonly decomposition: DecompositionFinalizer;
    readonly recomposition: RecompositionFinalizer;
    readonly nonDecomposition: NonDecompositionFinalizer;
    readonly decomposedLabels: DecomposedLabelsFinalizer;
    readonly decomposedPermissionSet: DecomposedPermissionSetFinalizer;
    readonly decomposedExternalServiceRegistration: DecomposedExternalServiceRegistrationFinalizer;
    executeFinalizers(defaultDirectory?: string): AsyncIterable<WriterFormat[]>;
}
