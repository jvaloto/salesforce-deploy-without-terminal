import type { CustomLabel } from '@jsforce/jsforce-node/lib/api/metadata';
import { MetadataType } from '../../registry';
import { WriterFormat } from '../types';
import { ConvertTransactionFinalizer } from './transactionFinalizer';
type CustomLabelState = {
    customLabelByFullName: Map<string, CustomLabel>;
};
/**
 * Merges child components that share the same parent in the conversion pipeline
 * into a single file.
 *
 * Inserts unclaimed child components into the parent that belongs to the default package
 */
export declare class DecomposedLabelsFinalizer extends ConvertTransactionFinalizer<CustomLabelState> {
    transactionState: CustomLabelState;
    /** to support custom presets (the only way this code should get hit at all pass in the type from a transformer that has registry access */
    customLabelsType?: MetadataType;
    finalize(defaultDirectory?: string): Promise<WriterFormat[]>;
}
export {};
