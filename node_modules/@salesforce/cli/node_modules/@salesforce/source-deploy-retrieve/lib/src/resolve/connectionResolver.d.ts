import { Connection } from '@salesforce/core';
import { RegistryAccess } from '../registry/registryAccess';
import { FileProperties } from '../client/types';
import { MetadataComponent } from './types';
export type ResolveConnectionResult = {
    components: MetadataComponent[];
    apiVersion: string;
};
/**
 * Resolve MetadataComponents from an org connection by making listMetadata API calls
 * for the specified metadata types (`mdTypes` arg) or all supported metadata types
 * in the registry.
 */
export declare class ConnectionResolver {
    private connection;
    private registry;
    private mdTypeNames;
    private requestBatchSize;
    constructor(connection: Connection, registry?: RegistryAccess, mdTypes?: string[]);
    resolve(componentFilter?: (component: Partial<FileProperties>) => boolean): Promise<ResolveConnectionResult>;
    private sendBatchedRequests;
    private sendBatchedQueries;
}
