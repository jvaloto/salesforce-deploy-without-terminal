import { RegistryAccess } from '../registry/registryAccess';
import { TreeContainer } from './treeContainers';
import { MetadataComponent } from './types';
export type PackageTypeMembers = {
    name: string;
    members: string[];
};
export type PackageManifest = {
    types: PackageTypeMembers[];
    version: string;
};
export type ResolveManifestResult = {
    components: MetadataComponent[];
    apiVersion: string;
    fullName?: string;
};
/**
 * Resolve MetadataComponents from a manifest file (package.xml)
 */
export declare class ManifestResolver {
    private tree;
    private registry;
    constructor(tree?: TreeContainer, registry?: RegistryAccess);
    resolve(manifestPath: string): Promise<ResolveManifestResult>;
}
