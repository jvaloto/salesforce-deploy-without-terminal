import { JsonMap } from '@salesforce/ts-types';
import { XmlObj } from '../convert/types';
import { MetadataType } from '../registry/types';
/** handle wide-open reading of values from elements inside any metadata xml file...we don't know the type
 * Return the value of the matching element if supplied, or defaults `fullName` then `name`  */
export declare const extractUniqueElementValue: (xml: JsonMap, uniqueId?: string) => string | undefined;
/** @returns xmlElementName if specified, otherwise returns the directoryName */
export declare const getXmlElement: (mdType: MetadataType) => string;
/** composed function, exported from module for test */
export declare const unwrapAndOmitNS: (outerType: string) => (xml: JsonMap) => JsonMap;
/** Ex: CustomObject: { '@_xmlns': 'http://soap.sforce.com/2006/04/metadata' } has no real values */
export declare const objectHasSomeRealValues: (type: MetadataType) => (obj: XmlObj) => boolean;
