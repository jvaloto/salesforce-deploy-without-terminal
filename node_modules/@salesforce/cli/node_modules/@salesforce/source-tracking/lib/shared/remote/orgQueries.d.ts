import { Connection } from '@salesforce/core';
import { Duration } from '@salesforce/kit';
import { PinoLogger } from './remoteSourceTrackingService';
import { SourceMember } from './types';
export declare const calculateTimeout: (logger: PinoLogger) => (memberCount: number) => Duration;
/** exported only for spy/mock  */
export declare const querySourceMembersTo: (conn: Connection, toRevision: number) => Promise<SourceMember[]>;
export declare const querySourceMembersFrom: ({ conn, fromRevision, queryCache, userQueryCache, logger, }: {
    conn: Connection;
    fromRevision: number;
    /** optional cache, used if present.  Side effect: cache will be mutated */
    queryCache?: Map<number, SourceMember[]>;
    /** optional cache, used if present.  Side effect: cache will be mutated */
    userQueryCache?: Map<string, string>;
    /** if you don't pass in a logger, you get no log output */
    logger?: PinoLogger;
}) => Promise<SourceMember[]>;
export declare const queryFn: (conn: Connection, query: string) => Promise<SourceMember[]>;
